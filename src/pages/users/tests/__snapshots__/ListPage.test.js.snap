// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Users list page renders error banner, table, and hidden modal 1`] = `
<Page
  empty={
    Object {
      "content": <p>
        Manage your team's accounts and roles.
      </p>,
      "image": "Users",
      "show": false,
      "title": "Invite Your Team to SparkPost",
    }
  }
  primaryAction={
    Object {
      "Component": [Function],
      "content": "Invite User",
      "to": "/account/users/create",
    }
  }
  title="Users"
>
  <ApiErrorBanner
    errorDetails="Uh oh! It broke."
    message="Sorry, we seem to have had some trouble loading your users."
    reload={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
      }
    }
  />
</Page>
`;

exports[`Users list page renders table and hidden modal 1`] = `
<Page
  empty={
    Object {
      "content": <p>
        Manage your team's accounts and roles.
      </p>,
      "image": "Users",
      "show": false,
      "title": "Invite Your Team to SparkPost",
    }
  }
  primaryAction={
    Object {
      "Component": [Function],
      "content": "Invite User",
      "to": "/account/users/create",
    }
  }
  title="Users"
>
  <div>
    <TableCollection
      columns={
        Array [
          "Name",
          "Role",
          "Email",
          "Last Login",
          null,
        ]
      }
      defaultSortColumn={null}
      defaultSortDirection="asc"
      filterBox={
        Object {
          "exampleModifiers": Array [
            "name",
            "email",
            "role",
          ],
          "itemToStringKeys": Array [
            "username",
            "name",
            "email",
          ],
          "keyMap": Object {
            "role": "access",
          },
          "show": true,
        }
      }
      getRowData={[Function]}
      pagination={true}
      rows={
        Array [
          Object {
            "access": "admin",
            "email": "user1@test.com",
            "name": "Test User 1",
          },
          Object {
            "access": "admin",
            "email": "user2@test.com",
            "name": "Test User 2",
          },
        ]
      }
    />
    <DeleteModal
      content={
        <p>
          User "
          " will no longer be able to log in or access this SparkPost account and all API keys associated with this user will be immediately deleted.
        </p>
      }
      onCancel={[Function]}
      onDelete={[Function]}
      open={false}
      title="Are you sure you want to delete this user?"
    />
  </div>
</Page>
`;
